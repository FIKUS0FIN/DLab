#Copyright 2016 EPAM Systems, Inc.
# 
#Licensed under the Apache License, Version 2.0 (the "License");
#you may not use this file except in compliance with the License.
#You may obtain a copy of the License at
# 
#    http://www.apache.org/licenses/LICENSE-2.0
# 
#Unless required by applicable law or agreed to in writing, software
#distributed under the License is distributed on an "AS IS" BASIS,
#WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#See the License for the specific language governing permissions and
#limitations under the License.
#
inactiveUserTimeoutMillSec: ${INACTIVE_TIMEOUT_MSEC!300000}
ldapConnectionConfig:
  ldapHost: ${LDAP_HOST}
#  ldapHost: ec2-52-33-6-197.us-west-2.compute.amazonaws.com
  ldapPort: ${LDAP_PORT!389}
#  ldapPort: 389
  name: cn=${LDAP_USERNAME!'admin'},dc=example,dc=com
  credentials: ${LDAP_PASSWORD!'ldap'}
ldapBindTemplate: uid=%s,ou=People,dc=example,dc=com
ldapSearch: 
  - name: userInfo
    cache: true
    expirationTimeMsec: 600000
    scope: SUBTREE
    attributes: 
      - cn
      - gidNumber
    timeLimit: 0
    base: dc=example,dc=com
    filter: "(&(objectClass=inetOrgPerson)(uid=%username%))"
    searchResultProcessor:
      language: python
#      path: c:\tmp\enrich.py
      code: |
        def enrichUserInfo(ui,context):
          name = ui.getName()
          key = ('uid='+name+',ou=People,dc=example,dc=com').lower()
          userInfo=context['userInfo']
          if not key in userInfo:
            raise Exception('Python LDAP UserInfo not found for '+key)
          uid= userInfo[key]
          cn = context['userInfo'][key]['cn'].split(' ')
          ui.setFirstName(cn[0])
          ui.setLastName(cn[1])
          return ui
  - name: groupInfo
    cache: true
    expirationTimeMsec: 600000
    scope: SUBTREE
    attributes: 
      - cn
      - gidNumber
    timeLimit: 0
    base: dc=example,dc=com
    filter: "(&(objectClass=posixGroup))"
    searchResultProcessor:
      language: javascript
#      path: c:\tmp\enrich.js
      code: |
        var enrichUserInfo = function(ui,context) {
          name = ui.getName();
          key = ('uid='+name+',ou=People,dc=example,dc=com').toLowerCase();
          userInfo=context['userInfo'];
          if( userInfo[key] == undefined ) {
            throw 'JavaScript LDAP UserInfo not found for '+key;
          }
          uid= userInfo[key];
          userGid = uid['gidnumber'];
          groupInfo=context['groupInfo'];
          for( dn in groupInfo ) {
            group = groupInfo[dn];
            if( userGid == group['gidnumber'] ) {
              ui.addRole(group['cn']);
            }
          }
          return ui;
        }
    #trustStorePath: \Program Files\Java\jre1.8.0_101\lib\security\cacerts
    #trustStorePassword: changeit
    #keyStorePath: \work\keystore.jks
    #keyStorePassword: changeit
    #certAlias: dlabcert
server: 
  applicationConnectors:
  - type: ${CONNECTOR_TYPE}
    port: ${CONNECTOR_PORT!8090}
<#if CONNECTOR_TYPE == 'https'>
  - type: ${CONNECTOR_TYPE}
    port: ${CONNECTOR_PORT!8090}
    trustStorePath: ${TRUST_STORE_PATH!'./'}
    trustStorePassword: ${TRUST_STORE_PASSWORD}
    keyStorePath: ${KEY_STORE_PATH!'./'}
    keyStorePassword: ${KEY_STORE_PASSWORD}
    certAlias: ${CERT_ALIAS}
</#if>
  adminConnectors:
  - type: ${CONNECTOR_TYPE}
    port: ${ADMIN_CONNECTOR_PORT!8091}
<#if CONNECTOR_TYPE == 'https'>
  - type: ${CONNECTOR_TYPE}
    port: ${CONNECTOR_PORT!8090}
    trustStorePath: ${TRUST_STORE_PATH!'./'}
    trustStorePassword: ${TRUST_STORE_PASSWORD}
    keyStorePath: ${KEY_STORE_PATH!'./'}
    keyStorePassword: ${KEY_STORE_PASSWORD}
    certAlias: ${CERT_ALIAS}
</#if>

userInfoPersistenceEnabled: ${SESSION_PERSISTENCE_ENABLED!'true'}
awsUserIdentificationEnabled: true

mongo:
  host: ${MONGO_HOST}
  port: ${MONGO_PORT!27017}
  username: ${MONGO_USERNAME!'admin'}
  password: ${MOMGO_PASSWORD!'XS3ms9R3tP'}
  database: ${MONGO_DB!'dlabdb'}

logging:
  level: INFO
  loggers:
    io.dropwizard: INFO
    com.epam: DEBUG
    com.aegisql: DEBUG
  appenders:
    - type: console
    - type: file
      currentLogFilename: ${LOG_PATH!'/tmp/dlab/log'}/security.log
      archivedLogFilenamePattern: ${LOG_PATH!'/tmp/dlab/log'}/security-%d.log
